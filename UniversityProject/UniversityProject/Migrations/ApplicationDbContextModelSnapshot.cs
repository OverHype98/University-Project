// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityProject.Models;

namespace UniversityProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UniversityProject.Models.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StudentId");

                    b.HasKey("ApplicationId");

                    b.HasIndex("StudentId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("UniversityProject.Models.ApplicationCollege", b =>
                {
                    b.Property<int>("CollegeId");

                    b.Property<int>("ApplicationId");

                    b.HasKey("CollegeId", "ApplicationId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("ApplicationCollege");
                });

            modelBuilder.Entity("UniversityProject.Models.College", b =>
                {
                    b.Property<int>("CollegeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CollegeName");

                    b.Property<string>("Description");

                    b.Property<int>("NumberOfPlaces");

                    b.Property<int>("UniversityId");

                    b.HasKey("CollegeId");

                    b.HasIndex("UniversityId");

                    b.ToTable("Colleges");
                });

            modelBuilder.Entity("UniversityProject.Models.Criteria", b =>
                {
                    b.Property<int>("CriteriaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CriteriaDescription");

                    b.Property<string>("CriteriaName");

                    b.HasKey("CriteriaId");

                    b.ToTable("Criteria");
                });

            modelBuilder.Entity("UniversityProject.Models.CriteriaCollege", b =>
                {
                    b.Property<int>("CriteriaCollegeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CollegeId");

                    b.Property<int>("CriteriaId");

                    b.Property<decimal>("GradeWeight");

                    b.HasKey("CriteriaCollegeId");

                    b.HasIndex("CollegeId");

                    b.HasIndex("CriteriaId");

                    b.ToTable("CriteriaCollege");
                });

            modelBuilder.Entity("UniversityProject.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationId");

                    b.Property<int>("CriteriaId");

                    b.Property<decimal>("GradeValue");

                    b.HasKey("GradeId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("UniversityProject.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<int>("CNP");

                    b.Property<int?>("CollegeId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("StudentId");

                    b.HasIndex("CollegeId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("UniversityProject.Models.University", b =>
                {
                    b.Property<int>("UniversityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UniversityName");

                    b.HasKey("UniversityId");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("UniversityProject.Models.Application", b =>
                {
                    b.HasOne("UniversityProject.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UniversityProject.Models.ApplicationCollege", b =>
                {
                    b.HasOne("UniversityProject.Models.Application", "Application")
                        .WithMany("Colleges")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UniversityProject.Models.College", "College")
                        .WithMany("Application")
                        .HasForeignKey("CollegeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UniversityProject.Models.College", b =>
                {
                    b.HasOne("UniversityProject.Models.University")
                        .WithMany("Colleges")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UniversityProject.Models.CriteriaCollege", b =>
                {
                    b.HasOne("UniversityProject.Models.College")
                        .WithMany("CollegeCriterias")
                        .HasForeignKey("CollegeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UniversityProject.Models.Criteria", "Criteria")
                        .WithMany()
                        .HasForeignKey("CriteriaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UniversityProject.Models.Grade", b =>
                {
                    b.HasOne("UniversityProject.Models.Application", "Application")
                        .WithMany("Grades")
                        .HasForeignKey("ApplicationId");
                });

            modelBuilder.Entity("UniversityProject.Models.Student", b =>
                {
                    b.HasOne("UniversityProject.Models.College")
                        .WithMany("Students")
                        .HasForeignKey("CollegeId");
                });
#pragma warning restore 612, 618
        }
    }
}
